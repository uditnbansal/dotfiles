local keymap = vim.keymap
local cmd = vim.cmd
local lsp = vim.lsp

vim.g.mapleader = ","

-- insert mode
keymap.set('i', '<C-a>', '<C-o>^')
keymap.set('i', '<C-e>', '<C-o>$')
keymap.set('i', '<C-h>', '<Left>')
keymap.set('i', '<C-l>', '<Right>')
keymap.set('i', 'jj', '<Esc>')

-- terminal mode
keymap.set('t', 'jkj', '<C-\\><C-n>')
keymap.set('t', '<Leader>tt', '<C-\\><C-n>:FloatermToggle<CR>')

-- normal mode
keymap.set('n', ';', ':')
keymap.set('n', '<Leader>/', '/\\<\\><Left><Left>')
keymap.set('n', '<Leader><Tab>', ':Scratch<CR>')
keymap.set('n', '<Leader>.', ':ScratchPreview<CR>')
keymap.set('n', '<Leader>FF', lsp.buf.format, {})
keymap.set('n', '<Leader>Fc', ':%!clang-format --assume-filename=%:p -style=file<CR>')
keymap.set('n', '<Leader>Fj', ':%!python -m json.tool<CR>')
keymap.set('n', '<Leader>Fp', ':!black -l 80 %:p<CR>')
keymap.set('n', '<Leader>S', ':source<CR>')
keymap.set('n', '<Leader>b<Space>', ':sp<CR>')
keymap.set('n', '<Leader>bb', ':b#<CR>')
keymap.set('n', '<Leader>bd', ':bd<CR>')
keymap.set('n', '<Leader>bf', ':bfirst<CR>')
keymap.set('n', '<Leader>bl', ':blast<CR>')
keymap.set('n', '<Leader>bn', ':bn<CR>')
keymap.set('n', '<Leader>bp', ':bp<CR>')
keymap.set('n', '<Leader>bs', ':buffers<CR>')
keymap.set('n', '<Leader>cw', ':echo getcwd()<CR>')
keymap.set('n', '<Leader>dg', ':diffget<CR>')
keymap.set('n', '<Leader>e', ':e <C-R>=expand("%:p:h") . "/" <CR>')
keymap.set('n', '<Leader>fs', ':FSHere<CR>')
keymap.set('n', '<Leader>g<Space>', ':Git ')
keymap.set('n', '<Leader>ga', ':Git add %:p<CR><CR>')
keymap.set('n', '<Leader>gbb', ':Git branch<CR>')
keymap.set('n', '<Leader>gbl', ':Git blame -w<CR>')
keymap.set('n', '<Leader>gc<Space>', ':Git c<Space>')
keymap.set('n', '<Leader>gca', ':Git commit --amend<CR>')
keymap.set('n', '<Leader>gcm', ':Git cm<CR>')
keymap.set('n', '<Leader>gco', ':Git commit<CR>')
keymap.set('n', '<Leader>gdd', ':Gvdiffsplit HEAD<CR>')
keymap.set('n', '<Leader>gdn', ':Git dn<CR>')
keymap.set('n', '<Leader>gdp', ':Gvdiffsplit HEAD~1<CR>')
keymap.set('n', '<Leader>gll', ':Git log --oneline -n 10<CR>')
keymap.set('n', '<Leader>glo', ':Git log -n 5<CR>')
keymap.set('n', '<Leader>gph', ':Git push<CR>')
keymap.set('n', '<Leader>gpl', ':Git pl<CR>')
keymap.set('n', '<Leader>gpg', ':Git pg<CR>')
keymap.set('n', '<Leader>gsh', ':Git sh<CR>')
keymap.set('n', '<Leader>gsn', ':Git sn<CR>')
keymap.set('n', '<Leader>gss', ':Git s<CR>')
keymap.set('n', '<Leader>gst', ':Git<CR>')
keymap.set('n', '<Leader>h', ':sp<CR>')
keymap.set('n', '<Leader>ll', ':LspLog<CR>')
keymap.set('n', '<Leader>li', ':LspInfo<CR>')
keymap.set('n', '<Leader>lr', ':LspRestart<CR>')
keymap.set('n', '<Leader>ls', ':LspStart<CR>')
keymap.set('n', '<Leader>m', ':IBLToggle<CR>')
keymap.set('n', '<Leader>pc', ':Lazy clean<CR>')
keymap.set('n', '<Leader>pi', ':Lazy install<CR>')
keymap.set('n', '<Leader>ps', ':Lazy show<CR>')
keymap.set('n', '<Leader>pu', ':Lazy update<CR>')
keymap.set('n', '<Leader>q', ':bd<CR>')
keymap.set('n', '<Leader>r', ':redraw<CR>:echo expand("%:p")<CR>')
keymap.set('n', '<Leader>s', ':w<CR>')
keymap.set('n', '<Leader>tt', ':FloatermToggle<CR>')
keymap.set('n', '<Leader>uu', cmd.UndotreeToggle)
keymap.set('n', '<Leader>v', ':vsp<CR>')
keymap.set('n', '<Space>', ':nohlsearch<Bar>:echo<CR>', { silent = true })
keymap.set('n', 'Q', ':q<CR>')
keymap.set('n', '[t', ':tabprev<CR>')
keymap.set('n', ']t', ':tabnext<CR>')

-- visual mode
keymap.set('v', '<Leader>s', ':sort<CR>')
