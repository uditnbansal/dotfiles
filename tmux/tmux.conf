source $DOTFILES/tmux/tmux.bare.conf

# Unbind Keys
unbind C-b
unbind Down
unbind Left
unbind Right
unbind Up
unbind c
unbind s

# Set the prefix as Ctrl+a
set -g prefix C-a

# automatically renumber windows
set-option -g renumber-windows on

# Set to xterm
set -g default-terminal "screen-256color-bce"

# Setting options
set -g base-index 1             # start numbering at 1
set -g history-limit 4000       # more history
set -g status on                # turn the status bar on
set -g status-interval 1        # update the status bar every 1 second
set -g status-justify centre    # center window list for clarity
set -g status-position bottom   # position the status bar at top of screen
set -gw aggressive-resize on    # resize 5 at a time
set -gw mode-keys vi            # vi style bindings
set -gw xterm-keys on           # allow for keys like Ctrl + Arrow etc.
set -s escape-time 0            # allows for faster key repetition

##### KEYBINDINGS #####

# send prefix
bind C-a send-prefix

# window split
bind v split-window -h
bind b split-window

# window creation
bind -n M-c command-prompt -p 'new-window:' 'new-window -c "#{pane_current_path}" -n "%1"'
bind -n M-C new-window

# window desctruction
bind -n M-x confirm-before -p "kill-pane #P? (y/n)" kill-pane

# move accross in windows
bind -n M-h previous-window
bind -n M-H swap-window -t -1
bind -n M-l next-window
bind -n M-L swap-window -t +1
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-y set-window-option synchronize-panes

# vi style keys in copypaste mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
one_pane='(( #{window_panes} < 2 ))'
bind -n C-h if-shell "$is_vim || $one_pane" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim || $one_pane" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim || $one_pane" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim || $one_pane" "send-keys C-l" "select-pane -R"

# arrow pane resizing
bind -nr C-Left resize-pane -L
bind -nr C-Right resize-pane -R
bind -nr C-Up resize-pane -U
bind -nr C-Down resize-pane -D

# aggressive arrow pane resize
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Up resize-pane -U 10
bind -n S-Down resize-pane -D 10

bind h resize-pane -L 10
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -R 10

# zoom shortcut
bind -n M-z resize-pane -Z

# buffer shortcut
bind -n M-[ copy-mode
bind -n M-] paste-buffer

# switch sessions
bind -n M-( switch-client -p
bind -n M-) switch-client -n

# source file shortcut
bind -n M-r source-file "$DOTFILES/tmux/tmux.conf"

# fancy functions
bind -n M-s command-prompt -p "ssh:" 'new-window -n "%1" "ssh %1"'
bind -n M-g new-window -n "ssh:udit-dev" "ssh udit-dev"
bind -n M-e new-window -n "ssh:event-dev" "ssh event-dev"
bind -n M-m command-prompt -p "mosh:" 'new-window -n "%1" "mosh %1"'
bind -n M-, command-prompt -I "#{window_name}" -p "rename-window:" "rename-window %1"
bind -n M-. command-prompt -p "target-window:" "move-window -t %1"

# splitting panes
bind -n M-v split-window -c "#{pane_current_path}" -h
bind -n M-b split-window -c "#{pane_current_path}"

# Set the style from the tmuxline snapshot
source-file $DOTFILES/tmux/tmux.snapshot

# Activate and deactivate all keybindings
# Uncomment this line for the local dev server. Not used in remote server
# bind -n M-k unbind -a \; source-file $DOTFILES/tmux/tmux.bare.conf \; setw -g status-bg colour232 \; setw -g window-status-format " #W " \; setw -g window-status-current-format " #I-#W " \; display-message Deactivated
